TASK :
magine you are managing a stack of plates in the kitchen.
You can only stack up to 3 plates.
The program should

Add a plate to the stack.
Remove the top plate from the stack when needed.
Check which plate is currently on top of the stack.
The program will handle cases when the stack is full (can’t add more plates) 
or empty (can’t remove plates).

#include<iostream>
using namespace std;
class PlateStack {
private:
 int top;
 string plates[3];
public:
 PlateStack() { top = -1; }


 void addPlate(string plate) {
 if (top >= 2) {
 cout << "Stack is full! Can't add more plates." << endl;
 } else {
 top++;
 plates[top] = plate;
 cout << plate << " added to the stack." << endl;
 }
 }
 void removePlate() {
 if (top == -1) {
 cout << "Stack is empty! No plates to remove." << endl;
 } else {
 cout << plates[top] << " removed from the stack." << endl;
 top--;
 }
 }
 // Function to check the top plate
 void topPlate() {
 if (top == -1) {
 cout << "No plates in the stack." << endl;
 } else {
 cout << "Top plate is: " << plates[top] << endl;
 }
 }
};
int main() {
 PlateStack stack;

 stack.addPlate("Plate 1");
 stack.addPlate("Plate 2");
 stack.addPlate("Plate 3");
 stack.addPlate("Plate 4"); // Should show stack full

 stack.topPlate(); // Should show Plate 3

 stack.removePlate(); // Removes Plate 3
 stack.topPlate(); // Should show Plate 2

 stack.removePlate(); // Removes Plate 2
 stack.removePlate(); // Removes Plate 1
 stack.removePlate(); // No plates left, stack empty

 return 0;
}

